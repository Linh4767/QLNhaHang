@model IEnumerable<QLNhaHang.Models.Ban>

@{
    Layout = "Header";
    ViewData["Title"] = "Chuyển Bàn";
}
<html lang="en">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <style>
        .grid-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 16px;
        }

        .grid-item {
            background-color: #f8f9fa;
            border: 1px solid #ccc;
            border-radius: 8px;
            padding: 16px;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

            .grid-item.available {
                background-color: #d4edda; /* Màu xanh nhạt cho bàn trống */
                color: #155724;
            }

            .grid-item.occupied {
                background-color: #f8d7da; /* Màu đỏ nhạt cho bàn có người */
                color: #721c24;
            }

            .grid-item p {
                margin: 8px 0;
            }

            .grid-item .actions {
                margin-top: 10px;
            }

            .grid-item .btn {
                width: 100%;
                margin-bottom: 5px;
            }

        #floorSelect {
            font-weight: bold;
            color: black;
        }
    </style>
    <!-- Thêm vào phần <head> -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

</head>
<body>
    @if (TempData["ChuyenBan"] != null)
    {
        <div id="them" class="alert alert-success">
            @TempData["ChuyenBan"]
        </div>
    }
    <div class="container mt-4">
        <h2 class="mb-4 text-center">Chuyển Bàn</h2>

        <!-- Chọn tầng -->
        <div class="d-flex justify-content-between align-items-center mb-3">
            <select class="form-select w-25" id="floorSelect" onchange="filterByFloor()" @((ViewData["IsSelectingNewTable"]?.ToString() == "True") ? "disabled" : "")>
                <option value="1" selected="@(ViewData["CurrentFloor"]?.ToString() == "1")">Lầu 1</option>
                <option value="2" selected="@(ViewData["CurrentFloor"]?.ToString() == "2")">Lầu 2</option>
                <option value="3" selected="@(ViewData["CurrentFloor"]?.ToString() == "3")">Lầu 3</option>
            </select>
        </div>

        <!-- Danh sách bàn có người -->
        @if (ViewData["IsSelectingNewTable"]?.ToString() == "False")
        {
            <div id="occupied-tables" class="mb-4">
                <h4>Bàn Có Người</h4>
                <div class="grid-container">
                    @foreach (var item in (IEnumerable<QLNhaHang.Models.Ban>)ViewData["OccupiedTables"])
                    {
                        <div class="grid-item occupied">
                            <p><strong>Bàn @item.MaBan</strong></p>
                            <p>@item.SoLuongNguoi người</p>
                            <p>Vị trí: @item.ViTri</p>
                            <button class="btn btn-primary btn-sm" onclick="selectTable('@item.MaBan')">Chọn bàn mới</button>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- Danh sách bàn trống -->
        @if (ViewData["IsSelectingNewTable"]?.ToString() == "True")
        {
            <div id="available-tables" class="mb-4">
                <h4>Bàn Trống</h4>
                @if ((bool)ViewData["IsAvailableEmpty"])
                {
                    <p class="text-danger">Không còn bàn trống trong tầng này. Vui lòng chọn tầng khác.</p>
                }
                else
                {
                    <div class="grid-container">
                        @foreach (var item in (IEnumerable<QLNhaHang.Models.Ban>)ViewData["AvailableTables"])
                        {
                            <div class="grid-item available">
                                <p><strong>Bàn @item.MaBan</strong></p>
                                <p>@item.SoLuongNguoi người</p>
                                <p>Vị trí: @item.ViTri</p>
                                <button class="btn btn-success btn-sm" onclick="transferTable('@item.MaBan')">Chuyển bàn</button>
                            </div>
                        }
                    </div>
                }
                <button class="btn btn-danger mt-3" onclick="cancelSelection()">Hủy</button>
            </div>
        }

    </div>

    <script>
        let selectedTable = null;

        function selectTable(maBan) {
            selectedTable = maBan;

            // Chuyển sang chế độ chọn bàn mới
            const floor = document.getElementById("floorSelect").value;
            const url = `@Url.Action("DSChuyenBan", "Admin")?floor=${encodeURIComponent(floor)}&selectedTable=${encodeURIComponent(maBan)}&isSelectingNewTable=true`;
            window.location.href = url;
        }

        function cancelSelection() {
            // Hủy chọn bàn mới và quay lại danh sách bàn có người
            const floor = document.getElementById("floorSelect").value;
            const url = `@Url.Action("DSChuyenBan", "Admin")?floor=${encodeURIComponent(floor)}&isSelectingNewTable=false`;
            window.location.href = url;
        }

        function filterByFloor() {
            const floor = document.getElementById("floorSelect").value;

            // Gửi yêu cầu thay đổi tầng
            const url = `@Url.Action("DSChuyenBan", "Admin")?floor=${encodeURIComponent(floor)}&isSelectingNewTable=false`;
            window.location.href = url;
        }

        // Lấy giá trị selectedTable từ URL khi trang tải lại
        window.onload = function () {
            const urlParams = new URLSearchParams(window.location.search);
            const selectedTableParam = urlParams.get('selectedTable');
            if (selectedTableParam) {
                selectedTable = selectedTableParam;
            }
        };

        function transferTable(maBanMoi) {
            if (selectedTable == null) {
                alert("Vui lòng chọn bàn có người trước.");
                return;
            }

            // alert(`Chuyển bàn ${selectedTable} sang bàn ${maBanMoi}`);
            // Thêm logic chuyển bàn nếu cần
            const url = `@Url.Action("ChuyenBan", "Admin")?maBanCu=${encodeURIComponent(selectedTable)}&maBanMoi=${encodeURIComponent(maBanMoi)}`;
            window.location.href = url;
        }

        // Ẩn thông báo sau 3 giây
        setTimeout(function () {
            var them = document.getElementById("them");
            if (them) {
                them.style.display = "none";
            }
        }, 3000);
    </script>

</body>
</html>